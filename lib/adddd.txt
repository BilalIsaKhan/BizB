import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
const useStyles = makeStyles((theme) => ({
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const { closeModal, openModal } = props;
  const classes = useStyles();
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const { passwordClient } = getAccountsHandler();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
  const handleEmailChange = (event) => {
    setEmail(event.target.value);
  };
 
      const handleresetpsssword= (event) => {
        setResetPassword(event.target.value);
      };
      const handlephonenumber = (event) => {
       setPhoneNumber(event.target.value);
      };
      const handleFullname = (event) => {
      setFullname(event.target.value);
      };
    
    
      const handleChangeEmail = (event) => {
        setCheckedEmail(event.target.checked);
      };
  const handlePasswordChange = (event) => {
    setPassword(event.target.value);
  };
  const handleOpenLogIn = () => {
    openModal("login");
  };
  const registerUser = async () => {
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
           <Typography variant="body1">REGISTRATION </Typography>     
    <form className={classes.root} noValidate>
    <Grid container >
      <Grid xs={12} item>
                      <label className={classes.label} variant="h6">Email
                    <TextField placeholder="Enter last name"   InputProps={{ disableUnderline: true }}  required className={classes.input}  onChange={handleEmailChange} value={email}  type="email"
             />
                    </label>
                    </Grid>
                    <Grid item xs={12}>
                    <label className={classes.label}>Password
                    </label>
                    </Grid>
                    </Grid>
                    <div className={classes.socialmedia2}>
      <Button className={classes.register} InputProps={{ disableUnderline: true }} variant="h5"  type="submit"  onClick={registerUser}> Register</Button>
      </div>
      
      {!!error && <div className={classes.error}>{error}</div>}
      <div
        className={classes.switchEntryMode}
        onClick={handleOpenLogIn}
        onKeyDown={handleOpenLogIn}
        role="button"
        tabIndex={0}
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
SignUp.propTypes = {
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
//
import useViewer from "hooks/viewer/useViewer";
import { makeStyles } from '@material-ui/core/styles';
import { Grid, TextField, Button,  Typography } from '@material-ui/core';
import React, { useState } from "react";
import Checkbox from '@material-ui/core/Checkbox';
import Box from '@material-ui/core/Box';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import PropTypes from "prop-types";
import getAccountsHandler from "../../lib/accountsServer.js";
import hashPassword from "../../lib/utils/hashPassword";
 
 
    label:{
      display: 'flex',
      marginTop:theme.spacing(1),
      color:"#333333",
      flexDirection: "column",
   
    },
   
    input:{
      width:"387px",
      height:"48px",
      borderRadius:"6px",
       color:"red",
      
       justifyContent:"center",
     paddingLeft:theme.spacing(2),
      background:"#F7F7F9",
      borderBottomColor:"none",
      "& .MuiInputBase-input": {
        color: "#969696",
        fontSize: "17px",
        padding:"opx",
     
      }
      
  
    },
  register:{
    width:"214px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    background:theme.palette.secondary.selected,
    "&:hover": {
  
      background:theme.palette.secondary.selected,
  }
  
  },
  socialmedia:{
    width:"250px",
    height:"48px",
    borderRadius:"40px",
    border:"none",
    display:"flex",
    justifyContent:"center",
    alignItems:"center",
    margin:"10px",
    
    background:theme.palette.secondary.selected,
  
  },
  topheader:{
    display:"flex",
    flexDirection: "row",
    justifyContent: "space-between",
  },
  terms:{
    lineHeight:"100px"
      
  },
  checkbox:{
    color:"green",
    "& .MuiIconButton-label ":{
     color:theme.palette.secondary.selected,
    },
    
   },
   checkboxdiv:{
    display:"flex",
    flexDirection: "row",
   },
   register2:{
    fontSize: "18px",
        color:"#333333",
        fontFamily:"Ostrich Sans Black",
          fontWeight: 900,
         
          lineHeight:"24px",
          fontStyle: "normal",
          marginLeft:"15px"
   },
   socialmedia2:{
    display:"flex",
    alignItems:"center",
    justifyContent:"center",
    flexWrap:"wrap"
   },
   
  }));
  
/bin
/boot
/cdrom
/dev
/etc
/home
/lib
/lib32
/lib64
/libx32
/lost+found
/media
/mnt
/opt
/proc
/root
/run
/sbin
/snap
/srv
/swapfile
/sys
/tmp
/usr
/var
 * Component to render when user tries to signup.
 * @param {Object} props of structure { closeModal: func, openModal: func }
 * @returns {Object} jsx
 */
export default function SignUp(props) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [, , refetch] = useViewer();
  const [fullname, setFullname] = useState("");
    const [phonenumber, setPhoneNumber] = useState("");
    const [resetpassword, setResetPassword] = useState("");
    setEmail(event.target.value);
  };
 
        setResetPassword(event.target.value);
      };
       setPhoneNumber(event.target.value);
      };
      setFullname(event.target.value);
      };
    
    
        setCheckedEmail(event.target.checked);
      };
    setPassword(event.target.value);
  };
    openModal("login");
  };
    try {
      // Creating user will login also
      await passwordClient.createUser({ email, password: hashPassword(password) });
      closeModal();
      await refetch();
    } catch (err) {
      setError(err.message);
    }
  };
  return (<>
   
         
    <Grid container >
             />
                    </label>
                    </Grid>
                    </label>
                    </Grid>
                    </Grid>
      </div>
      
      <div
      >
        Already have an account? Log In
      </div>
    </form>
    </>
  );
}
  closeModal: PropTypes.func,
  openModal: PropTypes.func
};
